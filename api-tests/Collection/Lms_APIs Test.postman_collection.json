{
	"info": {
		"_postman_id": "0cac8b9b-6c98-4ef0-8ce7-a715b5adf768",
		"name": "Lms_APIs Test",
		"description": "The LMS APIs is a collection of API's for creation and management of batches,enrollment to the courses,content state related APIs,Aggregation Apis with automated test cases.",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "4875988",
		"_collection_link": "https://dark-star-147860.postman.co/workspace/LernBBAPIs~32e17cc4-6806-407e-b8ef-485ad4d0b712/collection/4875988-0cac8b9b-6c98-4ef0-8ce7-a715b5adf768?action=share&source=collection_link&creator=4875988"
	},
	"item": [
		{
			"name": "HealthCheck",
			"item": [
				{
					"name": "HealthCheck",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/health"
					},
					"response": []
				}
			]
		},
		{
			"name": "AuthToken",
			"item": [
				{
					"name": "UserToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json();",
									"",
									"// Set global variable",
									"// pm.variables.set('refresh_token', jsonResponse.refresh_token);",
									"// pm.globals.set(\"refresh_token\", jsonResponse.result.identifier);",
									"pm.collectionVariables.set(\"refresh_token\", jsonResponse.refresh_token);",
									"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Cookie",
								"value": "connect.sid=s%3Ad3chYLP8OfuB2bWgfEFohiWpDxM7GFol.gOPmzH3d2nP9enZ5qSHlVx1e%2BozTleCjXtfz7LUycCk"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{auth_client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{auth_client_secret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								}
							]
						},
						"url": "{{host}}/auth/realms/sunbird/protocol/openid-connect/token"
					},
					"response": []
				},
				{
					"name": "RefreshToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Extract the locationId from the response and set it to the environment variable",
									"pm.test(\"Set access_token in environment variable\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set(\"keycloak_access_token\", responseJson.result.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Cookie",
								"value": "connect.sid=s%3Ad3chYLP8OfuB2bWgfEFohiWpDxM7GFol.gOPmzH3d2nP9enZ5qSHlVx1e%2BozTleCjXtfz7LUycCk"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "refresh_token",
									"value": "{{refresh_token}}",
									"type": "text"
								}
							]
						},
						"url": "{{host}}/auth/v1/refresh/token"
					},
					"response": []
				}
			]
		},
		{
			"name": "BatchAPIs",
			"item": [
				{
					"name": "BatchCreation",
					"item": [
						{
							"name": "Positive",
							"item": [
								{
									"name": "200 - Minimum input value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Extract the batchId from the response and set it to the environment variable",
													"pm.test(\"Set batchId in environment variable\", function () {",
													"    const responseJson = pm.response.json();",
													"    console.log( responseJson.result.batchId)",
													"    pm.environment.set(\"batch_id\", responseJson.result.batchId);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"courseId\": \"{{course_id}}\",\n        \"name\": \"{{batch_name}}\",\n        \"enrollmentType\": \"open\",\n        \"startDate\": \"{{batch_start_date}}\"\n    }\n}"
										},
										"url": "{{host}}/api/course/v1/batch/create"
									},
									"response": []
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "400 - missing enrollmentType",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"// Verify responseCode name",
													"pm.test(\"Status code name has string \\\"Bad Request\\\"\", () => {",
													"    pm.expect(pm.response.status).to.have.string(\"Bad Request\");",
													"});",
													"",
													"",
													"// Validation",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													"",
													"// Verify params",
													"pm.test(\"params.err should be \\\"MANDATORY_PARAMETER_MISSING\\\"\", () => {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"MANDATORY_PARAMETER_MISSING\");",
													"});",
													"pm.test(\"params.errmsg should be \\\"Mandatory parameter enrollmentType is missing.\\\"\", () => {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Mandatory parameter enrollmentType is missing.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"request\": {\n    \"courseId\": \"{{course_id}}\",\n    \"name\": \"{{batch_name}}\"\n  }\n}"
										},
										"url": "https://dev.sunbirded.org/api/course/v1/batch/create"
									},
									"response": []
								},
								{
									"name": "400 - missing startDate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"// Verify responseCode name",
													"pm.test(\"Status code name has string \\\"Bad Request\\\"\", () => {",
													"    pm.expect(pm.response.status).to.have.string(\"Bad Request\");",
													"});",
													"",
													"",
													"// Validation",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													"",
													"// Verify params",
													"pm.test(\"params.err should be \\\"MANDATORY_PARAMETER_MISSING\\\"\", () => {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"MANDATORY_PARAMETER_MISSING\");",
													"});",
													"pm.test(\"params.errmsg should be \\\"Mandatory parameter startDate is missing.\\\"\", () => {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Mandatory parameter startDate is missing.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"courseId\": \"{{course_id}}\",\n        \"name\": \"{{batch_name}}\",\n        \"description\": \"{{batch_description}}\",\n        \"enrollmentType\": \"open\",\n        \"endDate\": \"{{batch_end_date}}\"\n    }\n}"
										},
										"url": "https://dev.sunbirded.org/api/course/v1/batch/create"
									},
									"response": []
								},
								{
									"name": "400 - missing courseId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"// Verify responseCode name",
													"pm.test(\"Status code name has string \\\"Bad Request\\\"\", () => {",
													"    pm.expect(pm.response.status).to.have.string(\"Bad Request\");",
													"});",
													"",
													"",
													"// Validation",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													"",
													"// Verify params",
													"pm.test(\"params.err should be \\\"MANDATORY_PARAMETER_MISSING\\\"\", () => {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"MANDATORY_PARAMETER_MISSING\");",
													"});",
													"pm.test(\"params.errmsg should be \\\"Mandatory parameter courseId/collectionId is missing.\\\"\", () => {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Mandatory parameter courseId/collectionId is missing.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"name\": \"{{batch_name}}\",\n        \"description\": \"{{batch_description}}\",\n        \"enrollmentType\": \"open\",\n        \"endDate\": \"{{batch_end_date}}\"\n    }\n}"
										},
										"url": "https://dev.sunbirded.org/api/course/v1/batch/create"
									},
									"response": []
								},
								{
									"name": "400 - missing batch name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"// Verify responseCode name",
													"pm.test(\"Status code name has string \\\"Bad Request\\\"\", () => {",
													"    pm.expect(pm.response.status).to.have.string(\"Bad Request\");",
													"});",
													"",
													"// Validation",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													"",
													"// Verify params",
													"pm.test(\"params.err should be \\\"MANDATORY_PARAMETER_MISSING\\\"\", () => {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"MANDATORY_PARAMETER_MISSING\");",
													"});",
													"pm.test(\"params.errmsg should be \\\"Mandatory parameter name is missing.\\\"\", () => {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Mandatory parameter name is missing.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"courseId\": \"{{course_id}}\",\n        \"description\": \"{{batch_description}}\",\n        \"enrollmentType\": \"open\",\n        \"startDate\": \"{{batch_start_date}}\",\n        \"endDate\": \"{{batch_end_date}}\"\n    }\n}"
										},
										"url": "https://dev.sunbirded.org/api/course/v1/batch/create"
									},
									"response": []
								},
								{
									"name": "400 - invalid date format",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"// Verify responseCode name",
													"pm.test(\"Status code name has string \\\"Bad Request\\\"\", () => {",
													"    pm.expect(pm.response.status).to.have.string(\"Bad Request\");",
													"});",
													"",
													"// Validation",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													"",
													"// Verify params",
													"pm.test(\"params.err should be \\\"DATE_FORMAT_ERRROR\\\"\", () => {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"DATE_FORMAT_ERRROR\");",
													"});",
													"pm.test(\"params.errmsg should be \\\"Date format error.\\\"\", () => {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Date format error.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"request\": {\n    \"courseId\": \"{{course_id}}\",\n    \"name\": \"{{batch_name}}\",\n    \"description\": \"{{batch_description}}\",\n    \"enrollmentType\": \"open\",\n    \"startDate\": \"05/09/2023\",\n    \"endDate\": \"{{batch_end_date}}\"\n  }\n}"
										},
										"url": "https://dev.sunbirded.org/api/course/v1/batch/create"
									},
									"response": []
								},
								{
									"name": "400 - invalid enrollmentType",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"// Verify responseCode name",
													"pm.test(\"Status code name has string \\\"Bad Request\\\"\", () => {",
													"    pm.expect(pm.response.status).to.have.string(\"Bad Request\");",
													"});",
													"",
													"// Validation",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													"",
													"// Verify params",
													"pm.test(\"params.err should be \\\"INVALID_PARAMETER_VALUE\\\"\", () => {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"INVALID_PARAMETER_VALUE\");",
													"});",
													"pm.test(\"params.errmsg should be \\\"Invalid value join for parameter enrollmentType. Please provide a valid value.\\\"\", () => {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Invalid value join for parameter enrollmentType. Please provide a valid value.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"request\": {\n    \"courseId\": \"{{course_id}}\",\n    \"name\": \"{{batch_name}}\",\n    \"description\": \"{{batch_description}}\",\n    \"enrollmentType\": \"join\",\n    \"startDate\": \"{{batch_start_date}}\",\n    \"endDate\": \"{{batch_end_date}}\"\n  }\n}"
										},
										"url": "https://dev.sunbirded.org/api/course/v1/batch/create"
									},
									"response": []
								},
								{
									"name": "400 - invalid endDate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"// Verify responseCode name",
													"pm.test(\"Status code name has string \\\"Bad Request\\\"\", () => {",
													"    pm.expect(pm.response.status).to.have.string(\"Bad Request\");",
													"});",
													"",
													"// Validation",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													"",
													"// Verify params",
													"pm.test(\"params.err should be \\\"END_DATE_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"END_DATE_ERROR\");",
													"});",
													"pm.test(\"params.errmsg should be \\\"End date should be greater than start date.\\\"\", () => {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"End date should be greater than start date.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"request\": {\n    \"courseId\": \"{{course_id}}\",\n    \"name\": \"{{batch_name}}\",\n    \"description\": \"{{batch_description}}\",\n    \"enrollmentType\": \"open\",\n    \"startDate\": \"{{batch_start_date}}\",\n    \"endDate\": \"2023-04-01\"\n  }\n}"
										},
										"url": "https://dev.sunbirded.org/api/course/v1/batch/create"
									},
									"response": []
								},
								{
									"name": "400 - invalid startDate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"// Verify responseCode name",
													"pm.test(\"Status code name has string \\\"Bad Request\\\"\", () => {",
													"    pm.expect(pm.response.status).to.have.string(\"Bad Request\");",
													"});",
													"",
													"",
													"// Validation",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													"",
													"// Verify params",
													"pm.test(\"params.err should be \\\"COURSE_BATCH_START_DATE_INVALID\\\"\", () => {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"COURSE_BATCH_START_DATE_INVALID\");",
													"});",
													"pm.test(\"params.errmsg should be \\\"Batch start date should be either today or future date.\\\"\", () => {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Batch start date should be either today or future date.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"request\": {\n    \"courseId\": \"{{course_id}}\",\n    \"name\": \"{{batch_name}}\",\n    \"description\": \"{{batch_description}}\",\n    \"enrollmentType\": \"open\",\n    \"startDate\": \"2023-01-01\",\n    \"endDate\": \"{{batch_end_date}}\"\n  }\n}"
										},
										"url": "https://dev.sunbirded.org/api/course/v1/batch/create"
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "BatchUpdation",
					"item": [
						{
							"name": "Positive",
							"item": [
								{
									"name": "200 - Minimum input value",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "**Accept** relates to content-Type such as **\"MIME\"**, Its used in response body for executing different multi purpose operations.Therefore, its important that the server is correctly set up, so that the MIME types transmitted are recognised and correct to determine what action to do when a resource is fetched."
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "The Content Type entity is the media type of the resource.Possible media types can be:- \n\n  - Application/json\n\n  - Multipart/form-data\n\n  - Application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "Time Stamp at which **Update a batch** request was sent."
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "This Id Uniquely identifies a request if the same API is executed multiple times."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"status\": 1,\n        \"courseId\": \"{{course_id}}\",\n        \"id\": \"{{batch_id}}\"\n    }\n}"
										},
										"url": "{{host}}/api/course/v1/batch/update"
									},
									"response": []
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "400 - Invalid course batch id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"// Verify responseCode name",
													"pm.test(\"Status code name has string \\\"Bad Request\\\"\", () => {",
													"    pm.expect(pm.response.status).to.have.string(\"Bad Request\");",
													"});",
													"",
													"// Validation",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													"",
													"// Verify params",
													"pm.test(\"params.err should be \\\"INVALID_COURSE_BATCH_ID\\\"\", () => {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"INVALID_COURSE_BATCH_ID\");",
													"});",
													"pm.test(\"params.errmsg should be \\\"Invalid course batch id \\\"\", () => {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Invalid course batch id \");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "**Accept** relates to content-Type such as **\"MIME\"**, Its used in response body for executing different multi purpose operations.Therefore, its important that the server is correctly set up, so that the MIME types transmitted are recognised and correct to determine what action to do when a resource is fetched."
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "The Content Type entity is the media type of the resource.Possible media types can be:- \n\n  - Application/json\n\n  - Multipart/form-data\n\n  - Application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "Time Stamp at which **Update a batch** request was sent."
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "This Id Uniquely identifies a request if the same API is executed multiple times."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"enrollmentType\": \"open\",\n        \"startDate\": \"{{batch_update_date}}\",\n        \"enrollmentEndDate\": \"{{batch_end_date}}\",\n        \"status\": 1,\n        \"courseId\": \"{{course_id}}\",\n        \"id\": \"01377666464491929614\"\n    }\n}"
										},
										"url": "{{host}}/api/course/v1/batch/update"
									},
									"response": []
								},
								{
									"name": "400 - Missing Batch Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"// Verify responseCode name",
													"pm.test(\"Status code name has string \\\"Bad Request\\\"\", () => {",
													"    pm.expect(pm.response.status).to.have.string(\"Bad Request\");",
													"});",
													"",
													"// Validation",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													"",
													"// Verify params",
													"pm.test(\"params.err should be \\\"MANDATORY_PARAMETER_MISSING\\\"\", () => {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"MANDATORY_PARAMETER_MISSING\");",
													"});",
													"pm.test(\"params.errmsg should be \\\"Mandatory parameter id is missing.\\\"\", () => {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Mandatory parameter id is missing.\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "**Accept** relates to content-Type such as **\"MIME\"**, Its used in response body for executing different multi purpose operations.Therefore, its important that the server is correctly set up, so that the MIME types transmitted are recognised and correct to determine what action to do when a resource is fetched."
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "The Content Type entity is the media type of the resource.Possible media types can be:- \n\n  - Application/json\n\n  - Multipart/form-data\n\n  - Application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "Time Stamp at which **Update a batch** request was sent."
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "This Id Uniquely identifies a request if the same API is executed multiple times."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"enrollmentType\": \"open\",\n        \"startDate\": \"{{batch_update_date}}\",\n        \"enrollmentEndDate\": \"{{batch_end_date}}\",\n        \"status\": 1,\n        \"courseId\": \"{{course_id}}\"\n    }\n}"
										},
										"url": "{{host}}/api/course/v1/batch/update"
									},
									"response": []
								},
								{
									"name": "400 - Missing Course Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"// Verify responseCode name",
													"pm.test(\"Status code name has string \\\"Bad Request\\\"\", () => {",
													"    pm.expect(pm.response.status).to.have.string(\"Bad Request\");",
													"});",
													"",
													"// Validation",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													"",
													"// Verify params",
													"pm.test(\"params.err should be \\\"MANDATORY_PARAMETER_MISSING\\\"\", () => {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"MANDATORY_PARAMETER_MISSING\");",
													"});",
													"pm.test(\"params.errmsg should be \\\"Mandatory parameter courseId/collectionId is missing.\\\"\", () => {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Mandatory parameter courseId/collectionId is missing.\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "**Accept** relates to content-Type such as **\"MIME\"**, Its used in response body for executing different multi purpose operations.Therefore, its important that the server is correctly set up, so that the MIME types transmitted are recognised and correct to determine what action to do when a resource is fetched."
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "The Content Type entity is the media type of the resource.Possible media types can be:- \n\n  - Application/json\n\n  - Multipart/form-data\n\n  - Application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "Time Stamp at which **Update a batch** request was sent."
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "This Id Uniquely identifies a request if the same API is executed multiple times."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"enrollmentType\": \"open\",\n        \"startDate\": \"{{batch_update_date}}\",\n        \"enrollmentEndDate\": \"{{batch_end_date}}\",\n        \"status\": 1,\n        \"id\": \"01377666464491929614\"\n    }\n}"
										},
										"url": "{{host}}/api/course/v1/batch/update"
									},
									"response": []
								},
								{
									"name": "400 - Invalid status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"// Verify responseCode name",
													"pm.test(\"Status code name has string \\\"Bad Request\\\"\", () => {",
													"    pm.expect(pm.response.status).to.have.string(\"Bad Request\");",
													"});",
													"",
													"// Validation",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													"",
													"// Verify params",
													"pm.test(\"params.err should be \\\"INVALID_PROGRESS_STATUS\\\"\", () => {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"INVALID_PROGRESS_STATUS\");",
													"});",
													"pm.test(\"params.errmsg should be \\\"Progress status value should be NOT_STARTED(0), STARTED(1), COMPLETED(2).\\\"\", () => {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Progress status value should be NOT_STARTED(0), STARTED(1), COMPLETED(2).\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "**Accept** relates to content-Type such as **\"MIME\"**, Its used in response body for executing different multi purpose operations.Therefore, its important that the server is correctly set up, so that the MIME types transmitted are recognised and correct to determine what action to do when a resource is fetched."
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "The Content Type entity is the media type of the resource.Possible media types can be:- \n\n  - Application/json\n\n  - Multipart/form-data\n\n  - Application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "Time Stamp at which **Update a batch** request was sent."
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "This Id Uniquely identifies a request if the same API is executed multiple times."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"enrollmentType\": \"open\",\n        \"startDate\": \"{{batch_update_date}}\",\n        \"enrollmentEndDate\": \"{{batch_end_date}}\",\n        \"status\": 5,\n        \"courseId\": \"do_113776650927300608138\",\n        \"id\": \"01377666464491929614\"\n    }\n}"
										},
										"url": "{{host}}/api/course/v1/batch/update"
									},
									"response": []
								},
								{
									"name": "400 - invalid date format",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"// Verify responseCode name",
													"pm.test(\"Status code name has string \\\"Bad Request\\\"\", () => {",
													"    pm.expect(pm.response.status).to.have.string(\"Bad Request\");",
													"});",
													"",
													"// Validation",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													"",
													"// Verify params",
													"pm.test(\"params.err should be \\\"DATE_FORMAT_ERRROR\\\"\", () => {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"DATE_FORMAT_ERRROR\");",
													"});",
													"pm.test(\"params.errmsg should be \\\"Date format error.\\\"\", () => {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Date format error.\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"courseId\": \"{{course_id}}\",\n        \"name\": \"{{batch_name}}\",\n        \"description\": \"{{batch_description}}\",\n        \"enrollmentType\": \"open\",\n        \"startDate\": \"05/09/2023\",\n        \"endDate\": \"{{batch_end_date}}\",\n        \"id\": \"01377666260145766417\"\n    }\n}"
										},
										"url": "{{host}}/api/course/v1/batch/update"
									},
									"response": []
								},
								{
									"name": "400 - invalid enrollmentType",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"// Verify responseCode name",
													"pm.test(\"Status code name has string \\\"Bad Request\\\"\", () => {",
													"    pm.expect(pm.response.status).to.have.string(\"Bad Request\");",
													"});",
													"",
													"// Validation",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													"",
													"// Verify params",
													"pm.test(\"params.err should be \\\"INVALID_PARAMETER_VALUE\\\"\", () => {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"INVALID_PARAMETER_VALUE\");",
													"});",
													"pm.test(\"params.errmsg should be \\\"Invalid value join for parameter enrollmentType. Please provide a valid value.\\\"\", () => {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Invalid value join for parameter enrollmentType. Please provide a valid value.\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"request\": {\n    \"courseId\": \"{{course_id}}\",\n    \"name\": \"{{batch_name}}\",\n    \"description\": \"{{batch_description}}\",\n    \"enrollmentType\": \"join\",\n    \"startDate\": \"{{batch_start_date}}\",\n    \"endDate\": \"{{batch_end_date}}\",\n    \"id\":\"01377666260145766417\"\n  }\n}"
										},
										"url": "{{host}}/api/course/v1/batch/update"
									},
									"response": []
								},
								{
									"name": "400 - invalid endDate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"// Verify responseCode name",
													"pm.test(\"Status code name has string \\\"Bad Request\\\"\", () => {",
													"    pm.expect(pm.response.status).to.have.string(\"Bad Request\");",
													"});",
													"",
													"// Validation",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													"",
													"// Verify params",
													"pm.test(\"params.err should be \\\"END_DATE_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"END_DATE_ERROR\");",
													"});",
													"pm.test(\"params.errmsg should be \\\"End date should be greater than start date.\\\"\", () => {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"End date should be greater than start date.\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"courseId\": \"{{course_id}}\",\n        \"name\": \"{{batch_name}}\",\n        \"description\": \"{{batch_description}}\",\n        \"enrollmentType\": \"open\",\n        \"startDate\": \"{{batch_start_date}}\",\n        \"endDate\": \"2023-04-01\",\n        \"id\": \"01377666260145766417\"\n    }\n}"
										},
										"url": "{{host}}/api/course/v1/batch/update"
									},
									"response": []
								},
								{
									"name": "400 - invalid startDate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"// Verify responseCode name",
													"pm.test(\"Status code name has string \\\"Bad Request\\\"\", () => {",
													"    pm.expect(pm.response.status).to.have.string(\"Bad Request\");",
													"});",
													"",
													"// Validation",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													"",
													"// Verify params",
													"pm.test(\"params.err should be \\\"INVALID_BATCH_START_DATE_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"INVALID_BATCH_START_DATE_ERROR\");",
													"});",
													"pm.test(\"params.errmsg should be \\\"Please provide valid Start Date.\\\"\", () => {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Please provide valid Start Date.\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"courseId\": \"do_113776650927300608138\",\n        \"name\": \"{{batch_name}}\",\n        \"description\": \"{{batch_description}}\",\n        \"enrollmentType\": \"open\",\n        \"startDate\": \"2023-01-01\",\n        \"endDate\": \"{{batch_end_date}}\",\n        \"id\": \"01377666464491929614\"\n    }\n}"
										},
										"url": "{{host}}/api/course/v1/batch/update"
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "BatchRead",
					"item": [
						{
							"name": "Positive",
							"item": [
								{
									"name": "200 - Minimum input value",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "The Content Type entity is the media type of the resource.Possible media types can be:- \n\n  - Application/json\n\n  - Multipart/form-data\n\n  - Application/x-www-form-urlencoded"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "Time Stamp at which **Fetch a batch** request was sent."
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "This Id Uniquely identifies a request if the same API is executed multiple times."
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "This Id Uniquely identifies the type of device (Mobile)(desktop) used to access Sunbird."
											}
										],
										"url": "{{host}}/api/course/v1/batch/read/{{batch_id}}"
									},
									"response": []
								}
							]
						},
						{
							"name": "Negative",
							"item": []
						}
					]
				},
				{
					"name": "BatchSearch",
					"item": [
						{
							"name": "Positive",
							"item": [
								{
									"name": "200 - Minimum input value",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "The Content Type entity is the media type of the resource.Possible media types can be:- \n\n  - Application/json\n\n  - Multipart/form-data\n\n  - Application/x-www-form-urlencoded"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "Time Stamp at which **Lists the existing batches** request was sent."
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "This Id Uniquely identifies a request if the same API is executed multiple times."
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "This Id Uniquely identifies the type of device (Mobile)(desktop) used to access Sunbird."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"filters\": {}\n    }\n}"
										},
										"url": "{{host}}/api/course/v1/batch/list"
									},
									"response": []
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "500 - No Filters",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 500\", function () {",
													"    pm.response.to.have.status(500);",
													"});",
													"",
													"// Validation",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"SERVER_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"SERVER_ERROR\");",
													"});",
													"pm.test(\"params.err should be \\\"INTERNAL_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"INTERNAL_ERROR\");",
													"});",
													"pm.test(\"params.errmsg should be \\\"Process failed,please try again later.\\\"\", () => {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Process failed,please try again later.\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "The Content Type entity is the media type of the resource.Possible media types can be:- \n\n  - Application/json\n\n  - Multipart/form-data\n\n  - Application/x-www-form-urlencoded"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "Time Stamp at which **Lists the existing batches** request was sent."
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "This Id Uniquely identifies a request if the same API is executed multiple times."
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "This Id Uniquely identifies the type of device (Mobile)(desktop) used to access Sunbird."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {}\n}"
										},
										"url": "{{host}}/api/course/v1/batch/list"
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "BatchCertificate",
					"item": [
						{
							"name": "BatchCertificateTemplateAdd",
							"item": [
								{
									"name": "Positive",
									"item": [
										{
											"name": "200 - Minimum required fields",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"Validate specific field values\", function () {",
															"    pm.expect(jsonResponse.id).to.eql(\"api.course.batch.cert.template.add\");",
															"    pm.expect(jsonResponse.ver).to.eql(\"v1\");",
															"    pm.expect(jsonResponse.params.status).to.eql(\"success\");",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"OK\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													},
													{
														"key": "X-Authenticated-User-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\",\n                \"criteria\": {\n                    \"enrollment\": {\n                        \"status\": \"2\"\n                    }\n                },\n                \"signatoryList\": [\n                    {\n                        \"name\": \"string\",\n                        \"id\": \"string\",\n                        \"designation\": \"CEO\",\n                        \"image\": \"string\"\n                    }\n                ],\n                \"issuer\": {\n                    \"name\": \"string\",\n                    \"url\": \"string\",\n                    \"publicKey\": [\n                        7,\n                        8\n                    ]\n                }\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/course/batch/cert/v1/template/add"
											},
											"response": [
												{
													"name": "BatchCertificateTemplateAddV1",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text"
															},
															{
																"key": "X-Authenticated-User-token",
																"value": "{{keycloak_access_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\",\n                \"criteria\": {\n                    \"enrollment\": {\n                        \"status\": \"2\"\n                    }\n                },\n                \"signatoryList\": [\n                    {\n                        \"name\": \"string\",\n                        \"id\": \"string\",\n                        \"designation\": \"CEO\",\n                        \"image\": \"string\"\n                    }\n                ],\n                \"issuer\": {\n                    \"name\": \"string\",\n                    \"url\": \"string\",\n                    \"publicKey\": [\n                        7,\n                        8\n                    ]\n                }\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/course/batch/cert/v1/template/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Fri, 08 Sep 2023 10:03:57 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Transfer-Encoding",
															"value": "chunked"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Vary",
															"value": "Accept-Encoding"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29999"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-response-length",
															"value": "22"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "181"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "185"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "16"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														},
														{
															"key": "Content-Encoding",
															"value": "gzip"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.template.add\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-08 10:03:57:847+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"c65904b2-2474-4fed-a380-6755a99d4cde\",\n        \"err\": null,\n        \"status\": \"success\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"response\": \"SUCCESS\"\n    }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Negative",
									"item": [
										{
											"name": "400 - Missing course id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"id should be api.course.batch.cert.template.add\", function () {",
															"    pm.expect(jsonResponse.id).to.eql(\"api.course.batch.cert.template.add\");",
															"});",
															"",
															"pm.test(\"ver should be v1\", function () {",
															"    pm.expect(jsonResponse.ver).to.eql(\"v1\");",
															"});",
															"",
															"pm.test(\"params.status should be MANDATORY_PARAMETER_MISSING\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"MANDATORY_PARAMETER_MISSING\");",
															"});",
															"",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													},
													{
														"key": "X-Authenticated-User-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"{{asset_id}}\",\n                \"criteria\": {\n                    \"enrollment\": {\n                        \"status\": \"2\"\n                    }\n                },\n                \"signatoryList\": [\n                    {\n                        \"name\": \"string\",\n                        \"id\": \"string\",\n                        \"designation\": \"CEO\",\n                        \"image\": \"string\"\n                    }\n                ],\n                \"issuer\": {\n                    \"name\": \"string\",\n                    \"url\": \"string\",\n                    \"publicKey\": [\n                        7,\n                        8\n                    ]\n                }\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/course/batch/cert/v1/template/add"
											},
											"response": [
												{
													"name": "BatchCertificateTemplateAddV1",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text"
															},
															{
																"key": "X-Authenticated-User-token",
																"value": "{{keycloak_access_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"{{asset_id}}\",\n                \"criteria\": {\n                    \"enrollment\": {\n                        \"status\": \"2\"\n                    }\n                },\n                \"signatoryList\": [\n                    {\n                        \"name\": \"string\",\n                        \"id\": \"string\",\n                        \"designation\": \"CEO\",\n                        \"image\": \"string\"\n                    }\n                ],\n                \"issuer\": {\n                    \"name\": \"string\",\n                    \"url\": \"string\",\n                    \"publicKey\": [\n                        7,\n                        8\n                    ]\n                }\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/course/batch/cert/v1/template/add"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 04:50:06 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "333"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29993"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "8"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "12"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "10"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.template.add\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 04:50:06:364+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"d2c803ab-9966-45da-859d-0871b3f961c7\",\n        \"err\": \"MANDATORY_PARAMETER_MISSING\",\n        \"status\": \"MANDATORY_PARAMETER_MISSING\",\n        \"errmsg\": \"Mandatory parameter courseId is missing.\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										},
										{
											"name": "400 -Invalid course id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															"",
															"pm.test(\"err should be SERVER_ERROR\", function () {",
															"    pm.expect(jsonResponse.params.err).to.eql(\"SERVER_ERROR\");",
															"});",
															"",
															"pm.test(\"status should be SERVER_ERROR\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"SERVER_ERROR\");",
															"});",
															"",
															"pm.test(\"errmsg should be 'batchId is not linked with courseId'\", function () {",
															"    pm.expect(jsonResponse.params.errmsg).to.eql(\"batchId is not linked with courseId\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													},
													{
														"key": "X-Authenticated-User-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"@#aaa\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\",\n                \"criteria\": {\n                    \"enrollment\": {\n                        \"status\": \"2\"\n                    }\n                },\n                \"signatoryList\": [\n                    {\n                        \"name\": \"string\",\n                        \"id\": \"string\",\n                        \"designation\": \"CEO\",\n                        \"image\": \"string\"\n                    }\n                ],\n                \"issuer\": {\n                    \"name\": \"string\",\n                    \"url\": \"string\",\n                    \"publicKey\": [\n                        7,\n                        8\n                    ]\n                }\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/course/batch/cert/v1/template/add"
											},
											"response": [
												{
													"name": "400 -Invalid course id",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text"
															},
															{
																"key": "X-Authenticated-User-token",
																"value": "{{keycloak_access_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"@#aaa\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\",\n                \"criteria\": {\n                    \"enrollment\": {\n                        \"status\": \"2\"\n                    }\n                },\n                \"signatoryList\": [\n                    {\n                        \"name\": \"string\",\n                        \"id\": \"string\",\n                        \"designation\": \"CEO\",\n                        \"image\": \"string\"\n                    }\n                ],\n                \"issuer\": {\n                    \"name\": \"string\",\n                    \"url\": \"string\",\n                    \"publicKey\": [\n                        7,\n                        8\n                    ]\n                }\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/course/batch/cert/v1/template/add"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 05:23:46 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "288"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29992"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "18"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "26"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "9"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.template.add\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 05:23:46:171+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"0e9267d5-38dc-4da0-ae3f-2e48390bb1dd\",\n        \"err\": null,\n        \"status\": \"SERVER_ERROR\",\n        \"errmsg\": \"batchId is not linked with courseId\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										},
										{
											"name": "400 - Missing asset id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"id should be api.course.batch.cert.template.add\", function () {",
															"    pm.expect(jsonResponse.id).to.eql(\"api.course.batch.cert.template.add\");",
															"});",
															"",
															"pm.test(\"ver should be v1\", function () {",
															"    pm.expect(jsonResponse.ver).to.eql(\"v1\");",
															"});",
															"",
															"pm.test(\"params.status should be MANDATORY_PARAMETER_MISSING\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"MANDATORY_PARAMETER_MISSING\");",
															"});",
															"",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													},
													{
														"key": "X-Authenticated-User-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"criteria\": {\n                    \"enrollment\": {\n                        \"status\": \"2\"\n                    }\n                },\n                \"signatoryList\": [\n                    {\n                        \"name\": \"string\",\n                        \"id\": \"string\",\n                        \"designation\": \"CEO\",\n                        \"image\": \"string\"\n                    }\n                ],\n                \"issuer\": {\n                    \"name\": \"string\",\n                    \"url\": \"string\",\n                    \"publicKey\": [\n                        7,\n                        8\n                    ]\n                }\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/course/batch/cert/v1/template/add"
											},
											"response": [
												{
													"name": "400 - Missing asset id",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text"
															},
															{
																"key": "X-Authenticated-User-token",
																"value": "{{keycloak_access_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"criteria\": {\n                    \"enrollment\": {\n                        \"status\": \"2\"\n                    }\n                },\n                \"signatoryList\": [\n                    {\n                        \"name\": \"string\",\n                        \"id\": \"string\",\n                        \"designation\": \"CEO\",\n                        \"image\": \"string\"\n                    }\n                ],\n                \"issuer\": {\n                    \"name\": \"string\",\n                    \"url\": \"string\",\n                    \"publicKey\": [\n                        7,\n                        8\n                    ]\n                }\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/course/batch/cert/v1/template/add"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 04:54:56 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "335"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29990"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "6"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "11"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "13"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.template.add\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 04:54:56:569+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"ee76fcde-9384-4592-af5b-7f876b5a15db\",\n        \"err\": \"MANDATORY_PARAMETER_MISSING\",\n        \"status\": \"MANDATORY_PARAMETER_MISSING\",\n        \"errmsg\": \"Mandatory parameter identifier is missing.\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										},
										{
											"name": "400 - Invalid asset id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															"",
															"pm.test(\"err should be SERVER_ERROR\", function () {",
															"    pm.expect(jsonResponse.params.err).to.eql(\"SERVER_ERROR\");",
															"});",
															"",
															"pm.test(\"status should be SERVER_ERROR\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"SERVER_ERROR\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													},
													{
														"key": "X-Authenticated-User-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"do_Aaaa\",\n                \"criteria\": {\n                    \"enrollment\": {\n                        \"status\": \"2\"\n                    }\n                },\n                \"signatoryList\": [\n                    {\n                        \"name\": \"string\",\n                        \"id\": \"string\",\n                        \"designation\": \"CEO\",\n                        \"image\": \"string\"\n                    }\n                ],\n                \"issuer\": {\n                    \"name\": \"string\",\n                    \"url\": \"string\",\n                    \"publicKey\": [\n                        7,\n                        8\n                    ]\n                }\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/course/batch/cert/v1/template/add"
											},
											"response": [
												{
													"name": "400 - Invalid asset id",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text"
															},
															{
																"key": "X-Authenticated-User-token",
																"value": "{{keycloak_access_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"do_Aaaa\",\n                \"criteria\": {\n                    \"enrollment\": {\n                        \"status\": \"2\"\n                    }\n                },\n                \"signatoryList\": [\n                    {\n                        \"name\": \"string\",\n                        \"id\": \"string\",\n                        \"designation\": \"CEO\",\n                        \"image\": \"string\"\n                    }\n                ],\n                \"issuer\": {\n                    \"name\": \"string\",\n                    \"url\": \"string\",\n                    \"publicKey\": [\n                        7,\n                        8\n                    ]\n                }\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/course/batch/cert/v1/template/add"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 05:25:38 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "291"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29991"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "122"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "126"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "8"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.template.add\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 05:25:38:784+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"a2234845-0bb3-448d-a1dc-22310d0f0625\",\n        \"err\": null,\n        \"status\": \"SERVER_ERROR\",\n        \"errmsg\": \"Given cert template not found: do_Aaaa\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										},
										{
											"name": "400 - Missing batch id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"id should be api.course.batch.cert.template.add\", function () {",
															"    pm.expect(jsonResponse.id).to.eql(\"api.course.batch.cert.template.add\");",
															"});",
															"",
															"pm.test(\"ver should be v1\", function () {",
															"    pm.expect(jsonResponse.ver).to.eql(\"v1\");",
															"});",
															"",
															"pm.test(\"params.status should be MANDATORY_PARAMETER_MISSING\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"MANDATORY_PARAMETER_MISSING\");",
															"});",
															"",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													},
													{
														"key": "X-Authenticated-User-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\",\n                \"criteria\": {\n                    \"enrollment\": {\n                        \"status\": \"2\"\n                    }\n                },\n                \"signatoryList\": [\n                    {\n                        \"name\": \"string\",\n                        \"id\": \"string\",\n                        \"designation\": \"CEO\",\n                        \"image\": \"string\"\n                    }\n                ],\n                \"issuer\": {\n                    \"name\": \"string\",\n                    \"url\": \"string\",\n                    \"publicKey\": [\n                        7,\n                        8\n                    ]\n                }\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/course/batch/cert/v1/template/add"
											},
											"response": [
												{
													"name": "400 - Missing batch id",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text"
															},
															{
																"key": "X-Authenticated-User-token",
																"value": "{{keycloak_access_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"template\": {\n                \"identifier\": \"{{asset_id}}\",\n                \"criteria\": {\n                    \"enrollment\": {\n                        \"status\": \"2\"\n                    }\n                },\n                \"signatoryList\": [\n                    {\n                        \"name\": \"string\",\n                        \"id\": \"string\",\n                        \"designation\": \"CEO\",\n                        \"image\": \"string\"\n                    }\n                ],\n                \"issuer\": {\n                    \"name\": \"string\",\n                    \"url\": \"string\",\n                    \"publicKey\": [\n                        7,\n                        8\n                    ]\n                }\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/course/batch/cert/v1/template/add"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 04:53:22 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "332"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29991"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "6"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "10"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "12"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.template.add\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 04:53:22:779+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"e099eb0d-fc6d-41ac-b8ed-9f3104e17280\",\n        \"err\": \"MANDATORY_PARAMETER_MISSING\",\n        \"status\": \"MANDATORY_PARAMETER_MISSING\",\n        \"errmsg\": \"Mandatory parameter batchId is missing.\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										},
										{
											"name": "400 - Invalid batch id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															"",
															"pm.test(\"err should be SERVER_ERROR\", function () {",
															"    pm.expect(jsonResponse.params.err).to.eql(\"SERVER_ERROR\");",
															"});",
															"",
															"pm.test(\"status should be SERVER_ERROR\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"SERVER_ERROR\");",
															"});",
															"",
															"pm.test(\"errmsg should be 'No such batchId exists'\", function () {",
															"    pm.expect(jsonResponse.params.errmsg).to.eql(\"No such batchId exists\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													},
													{
														"key": "X-Authenticated-User-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"1234@#4\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\",\n                \"criteria\": {\n                    \"enrollment\": {\n                        \"status\": \"2\"\n                    }\n                },\n                \"signatoryList\": [\n                    {\n                        \"name\": \"string\",\n                        \"id\": \"string\",\n                        \"designation\": \"CEO\",\n                        \"image\": \"string\"\n                    }\n                ],\n                \"issuer\": {\n                    \"name\": \"string\",\n                    \"url\": \"string\",\n                    \"publicKey\": [\n                        7,\n                        8\n                    ]\n                }\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/course/batch/cert/v1/template/add"
											},
											"response": [
												{
													"name": "400 - Invalid batch id",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text"
															},
															{
																"key": "X-Authenticated-User-token",
																"value": "{{keycloak_access_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"1234@#4\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\",\n                \"criteria\": {\n                    \"enrollment\": {\n                        \"status\": \"2\"\n                    }\n                },\n                \"signatoryList\": [\n                    {\n                        \"name\": \"string\",\n                        \"id\": \"string\",\n                        \"designation\": \"CEO\",\n                        \"image\": \"string\"\n                    }\n                ],\n                \"issuer\": {\n                    \"name\": \"string\",\n                    \"url\": \"string\",\n                    \"publicKey\": [\n                        7,\n                        8\n                    ]\n                }\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/course/batch/cert/v1/template/add"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 05:28:13 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "275"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29989"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "10"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "14"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "13"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.template.add\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 05:28:13:324+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"b9e5e661-f158-4e68-97a6-641c172e4a47\",\n        \"err\": null,\n        \"status\": \"SERVER_ERROR\",\n        \"errmsg\": \"No such batchId exists\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										},
										{
											"name": "400 - Missing Issuer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"",
															"// Validation",
															"pm.test(\"id should be api.course.batch.cert.template.add\", function () {",
															"    pm.expect(jsonResponse.id).to.eql(\"api.course.batch.cert.template.add\");",
															"});",
															"",
															"pm.test(\"ver should be v1\", function () {",
															"    pm.expect(jsonResponse.ver).to.eql(\"v1\");",
															"});",
															"",
															"pm.test(\"params.status should be SERVER_ERROR\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"SERVER_ERROR\");",
															"});",
															"",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													},
													{
														"key": "X-Authenticated-User-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\",\n                \"criteria\": {\n                    \"enrollment\": {\n                        \"status\": \"2\"\n                    }\n                },\n                \"signatoryList\": [\n                    {\n                        \"name\": \"string\",\n                        \"id\": \"string\",\n                        \"designation\": \"CEO\",\n                        \"image\": \"string\"\n                    }\n                ]\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/course/batch/cert/v1/template/add"
											},
											"response": [
												{
													"name": "400 - Missing Issuer",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text"
															},
															{
																"key": "X-Authenticated-User-token",
																"value": "{{keycloak_access_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\",\n                \"criteria\": {\n                    \"enrollment\": {\n                        \"status\": \"2\"\n                    }\n                },\n                \"signatoryList\": [\n                    {\n                        \"name\": \"string\",\n                        \"id\": \"string\",\n                        \"designation\": \"CEO\",\n                        \"image\": \"string\"\n                    }\n                ]\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/course/batch/cert/v1/template/add"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 05:05:48 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "332"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29996"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "34"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "38"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "10"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.template.add\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 05:05:48:478+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"0f799981-8c4c-4a0a-b057-caba4bc14125\",\n        \"err\": null,\n        \"status\": \"SERVER_ERROR\",\n        \"errmsg\": \"Issuer or signatoryList is empty. Invalid template Id: do_113788048780771328112\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										},
										{
											"name": "400 - Missing signatoryList",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"",
															"// Validation",
															"pm.test(\"id should be api.course.batch.cert.template.add\", function () {",
															"    pm.expect(jsonResponse.id).to.eql(\"api.course.batch.cert.template.add\");",
															"});",
															"",
															"pm.test(\"ver should be v1\", function () {",
															"    pm.expect(jsonResponse.ver).to.eql(\"v1\");",
															"});",
															"",
															"pm.test(\"params.status should be SERVER_ERROR\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"SERVER_ERROR\");",
															"});",
															"",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													},
													{
														"key": "X-Authenticated-User-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\",\n                \"criteria\": {\n                    \"enrollment\": {\n                        \"status\": \"2\"\n                    }\n                },\n                \"issuer\": {\n                    \"name\": \"string\",\n                    \"url\": \"string\",\n                    \"publicKey\": [\n                        7,\n                        8\n                    ]\n                }\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/course/batch/cert/v1/template/add"
											},
											"response": [
												{
													"name": "400 - Missing signatoryList",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text"
															},
															{
																"key": "X-Authenticated-User-token",
																"value": "{{keycloak_access_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\",\n                \"criteria\": {\n                    \"enrollment\": {\n                        \"status\": \"2\"\n                    }\n                },\n                \"issuer\": {\n                    \"name\": \"string\",\n                    \"url\": \"string\",\n                    \"publicKey\": [\n                        7,\n                        8\n                    ]\n                }\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/course/batch/cert/v1/template/add"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 05:01:43 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "332"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29998"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "45"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "49"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "10"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.template.add\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 05:01:43:968+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"9c213f1d-26e5-468e-858e-01eefcee7613\",\n        \"err\": null,\n        \"status\": \"SERVER_ERROR\",\n        \"errmsg\": \"Issuer or signatoryList is empty. Invalid template Id: do_113788048780771328112\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										},
										{
											"name": "400 - Missing Criteria",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"",
															"// Validation",
															"pm.test(\"id should be api.course.batch.cert.template.add\", function () {",
															"    pm.expect(jsonResponse.id).to.eql(\"api.course.batch.cert.template.add\");",
															"});",
															"",
															"pm.test(\"ver should be v1\", function () {",
															"    pm.expect(jsonResponse.ver).to.eql(\"v1\");",
															"});",
															"",
															"pm.test(\"params.status should be MANDATORY_PARAMETER_MISSING\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"MANDATORY_PARAMETER_MISSING\");",
															"});",
															"",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													},
													{
														"key": "X-Authenticated-User-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\",\n                \"signatoryList\": [\n                    {\n                        \"name\": \"string\",\n                        \"id\": \"string\",\n                        \"designation\": \"CEO\",\n                        \"image\": \"string\"\n                    }\n                ],\n                \"issuer\": {\n                    \"name\": \"string\",\n                    \"url\": \"string\",\n                    \"publicKey\": [\n                        7,\n                        8\n                    ]\n                }\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/course/batch/cert/v1/template/add"
											},
											"response": [
												{
													"name": "400 - Missing criteria",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text"
															},
															{
																"key": "X-Authenticated-User-token",
																"value": "{{keycloak_access_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\",\n                \"signatoryList\": [\n                    {\n                        \"name\": \"string\",\n                        \"id\": \"string\",\n                        \"designation\": \"CEO\",\n                        \"image\": \"string\"\n                    }\n                ],\n                \"issuer\": {\n                    \"name\": \"string\",\n                    \"url\": \"string\",\n                    \"publicKey\": [\n                        7,\n                        8\n                    ]\n                }\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/course/batch/cert/v1/template/add"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 04:59:58 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "333"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29983"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "16"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "20"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "8"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.template.add\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 04:59:58:690+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"e944068c-b6e7-440e-a309-a15c3809093b\",\n        \"err\": \"MANDATORY_PARAMETER_MISSING\",\n        \"status\": \"MANDATORY_PARAMETER_MISSING\",\n        \"errmsg\": \"Mandatory parameter criteria is missing.\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "BatchCertificateIssue",
							"item": [
								{
									"name": "Positive",
									"item": [
										{
											"name": "200 - Minimum required input",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"Validate specific field values\", function () {",
															"    pm.expect(jsonResponse.id).to.eql(\"api.course.batch.cert.issue\");",
															"    pm.expect(jsonResponse.ver).to.eql(\"v1\");",
															"    pm.expect(jsonResponse.params.status).to.eql(\"success\");",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"OK\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"courseId\": \"{{course_id}}\",\n        \"batchId\": \"{{batch_id}}\",\n        \"userIds\": [\n            \"{{user_id}}\"\n        ]\n    }\n}"
												},
												"url": "{{host}}/api/course/batch/cert/v1/issue"
											},
											"response": [
												{
													"name": "BatchCertificateIssueV1",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-authenticated-user-token",
																"value": "{{keycloak_access_token}}"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"courseId\": \"{{course_id}}\",\n        \"batchId\": \"{{batch_id}}\",\n        \"userIds\": [\n            \"{{user_id}}\"\n        ]\n    }\n}"
														},
														"url": "{{host}}/api/course/batch/cert/v1/issue"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Fri, 08 Sep 2023 10:05:45 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Transfer-Encoding",
															"value": "chunked"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Vary",
															"value": "Accept-Encoding"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29998"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-response-length",
															"value": "225"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "12"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "14"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "1"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														},
														{
															"key": "Content-Encoding",
															"value": "gzip"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.issue\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-08 10:05:45:247+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"3b0520de-14ca-4c27-9d51-26e469c9ef00\",\n        \"err\": null,\n        \"status\": \"success\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"result\": {\n            \"batchId\": \"0138758519984209923\",\n            \"courseId\": \"do_113776650927300608138\",\n            \"collectionId\": \"do_113776650927300608138\",\n            \"status\": \"Certificates issue action for Course Batch Id 0138758519984209923 submitted Successfully!\"\n        }\n    }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Negative",
									"item": [
										{
											"name": "400 - Missing courseId",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"",
															"// Validation",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															"",
															"pm.test(\"err should be MANDATORY_PARAMETER_MISSING\", function () {",
															"    pm.expect(jsonResponse.params.err).to.eql(\"MANDATORY_PARAMETER_MISSING\");",
															"});",
															"",
															"pm.test(\"status should be MANDATORY_PARAMETER_MISSING\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"MANDATORY_PARAMETER_MISSING\");",
															"});",
															"",
															"pm.test(\"errmsg should be 'Mandatory parameter courseId/collectionId is missing.'\", function () {",
															"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Mandatory parameter courseId/collectionId is missing.\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"batchId\": \"{{batch_id}}\",\n        \"userIds\": [\n            \"{{user_id}}\"\n        ]\n    }\n}"
												},
												"url": "{{host}}/api/course/batch/cert/v1/issue"
											},
											"response": [
												{
													"name": "400 - Missing courseId",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-authenticated-user-token",
																"value": "{{keycloak_access_token}}"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"batchId\": \"{{batch_id}}\",\n        \"userIds\": [\n            \"{{user_id}}\"\n        ]\n    }\n}"
														},
														"url": "{{host}}/api/course/batch/cert/v1/issue"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 05:34:20 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "339"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29998"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "5"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "7"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "9"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.issue\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 05:34:20:507+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"c6cf3e16-fa4e-42c3-b378-fc7475c27fde\",\n        \"err\": \"MANDATORY_PARAMETER_MISSING\",\n        \"status\": \"MANDATORY_PARAMETER_MISSING\",\n        \"errmsg\": \"Mandatory parameter courseId/collectionId is missing.\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										},
										{
											"name": "400 - Missing batchId",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"pm.test(\"Test data type of the response and keys\", () => {",
															"    pm.expect(jsonResponse).to.be.an(\"object\").that.has.all.keys(",
															"        'id', 'ver', 'ts', 'params', 'responseCode', 'result'",
															"    );",
															"",
															"    pm.expect(jsonResponse.id).to.be.a(\"string\");",
															"    pm.expect(jsonResponse.ver).to.be.a(\"string\");",
															"    pm.expect(jsonResponse.ts).to.be.a(\"string\");",
															"    pm.expect(jsonResponse.responseCode).to.be.a(\"string\");",
															"",
															"    pm.expect(jsonResponse.params).to.be.an(\"object\").that.has.all.keys(",
															"        'resmsgid', 'msgid', 'err', 'status', 'errmsg'",
															"    );",
															"",
															"    pm.expect(jsonResponse.params.resmsgid).to.be.null;",
															"    pm.expect(jsonResponse.params.msgid).to.be.a(\"string\");",
															"    pm.expect(jsonResponse.params.err).to.be.a(\"string\");",
															"    pm.expect(jsonResponse.params.status).to.be.a(\"string\");",
															"    pm.expect(jsonResponse.params.errmsg).to.be.a(\"string\");",
															"",
															"    pm.expect(jsonResponse.result).to.be.an(\"object\");",
															"});",
															"",
															"// Validation",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															"",
															"pm.test(\"err should be MANDATORY_PARAMETER_MISSING\", function () {",
															"    pm.expect(jsonResponse.params.err).to.eql(\"MANDATORY_PARAMETER_MISSING\");",
															"});",
															"",
															"pm.test(\"status should be MANDATORY_PARAMETER_MISSING\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"MANDATORY_PARAMETER_MISSING\");",
															"});",
															"",
															"pm.test(\"errmsg should be 'Mandatory parameter batchId is missing.'\", function () {",
															"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Mandatory parameter batchId is missing.\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"courseId\": \"{{course_id}}\",\n        \"userIds\": [\n            \"{{user_id}}\"\n        ]\n    }\n}"
												},
												"url": "{{host}}/api/course/batch/cert/v1/issue"
											},
											"response": [
												{
													"name": "400 - missing batchId",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-authenticated-user-token",
																"value": "{{keycloak_access_token}}"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"courseId\": \"{{course_id}}\",\n        \"userIds\": [\n            \"{{user_id}}\"\n        ]\n    }\n}"
														},
														"url": "{{host}}/api/course/batch/cert/v1/issue"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 05:37:06 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "325"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29996"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "8"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "16"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "62"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.issue\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 05:37:06:782+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"21a9de3c-386c-471b-b339-5a7c367a0320\",\n        \"err\": \"MANDATORY_PARAMETER_MISSING\",\n        \"status\": \"MANDATORY_PARAMETER_MISSING\",\n        \"errmsg\": \"Mandatory parameter batchId is missing.\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										},
										{
											"name": "400 - Invalid course id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															"",
															"pm.test(\"status should be SERVER_ERROR\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"SERVER_ERROR\");",
															"});",
															"",
															"pm.test(\"errmsg should be 'batchId is not linked with courseId'\", function () {",
															"    pm.expect(jsonResponse.params.errmsg).to.eql(\"batchId is not linked with courseId\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"courseId\": \"aaaa\",\n        \"batchId\": \"{{batch_id}}\",\n        \"userIds\": [\n            \"{{user_id}}\"\n        ]\n    }\n}"
												},
												"url": "{{host}}/api/course/batch/cert/v1/issue"
											},
											"response": [
												{
													"name": "400 - Invalid course id",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-authenticated-user-token",
																"value": "{{keycloak_access_token}}"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"courseId\": \"aaaa\",\n        \"batchId\": \"{{batch_id}}\",\n        \"userIds\": [\n            \"{{user_id}}\"\n        ]\n    }\n}"
														},
														"url": "{{host}}/api/course/batch/cert/v1/issue"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 05:41:49 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "281"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29992"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "9"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "13"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "30"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.issue\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 05:41:49:689+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"8588f5e9-befb-438e-930c-0d4d8ee81af2\",\n        \"err\": null,\n        \"status\": \"SERVER_ERROR\",\n        \"errmsg\": \"batchId is not linked with courseId\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										},
										{
											"name": "400 - Invalid batch id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"// Validation",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															"",
															"pm.test(\"status should be SERVER_ERROR\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"SERVER_ERROR\");",
															"});",
															"",
															"pm.test(\"errmsg should be 'No such batchId exists'\", function () {",
															"    pm.expect(jsonResponse.params.errmsg).to.eql(\"No such batchId exists\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"courseId\": \"{{course_id}}\",\n        \"batchId\": \"aaa@123\",\n        \"userIds\": [\n            \"{{user_id}}\"\n        ]\n    }\n}"
												},
												"url": "{{host}}/api/course/batch/cert/v1/issue"
											},
											"response": [
												{
													"name": "400 - Invalid batchId",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-authenticated-user-token",
																"value": "{{keycloak_access_token}}"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"courseId\": \"{{course_id}}\",\n        \"batchId\": \"aaa@123\",\n        \"userIds\": [\n            \"{{user_id}}\"\n        ]\n    }\n}"
														},
														"url": "{{host}}/api/course/batch/cert/v1/issue"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 05:43:27 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "268"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29990"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "11"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "14"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "9"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.issue\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 05:43:27:896+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"d16956b9-5e0d-480d-a895-d8a8cb770ca8\",\n        \"err\": null,\n        \"status\": \"SERVER_ERROR\",\n        \"errmsg\": \"No such batchId exists\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "BatchCertificateTemplateRemove",
							"item": [
								{
									"name": "Positive",
									"item": [
										{
											"name": "200 - Minimum required fields",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"",
															"// Validation",
															"pm.test(\"Validate specific field values\", function () {",
															"    pm.expect(jsonResponse.id).to.eql(\"api.course.batch.cert.template.remove\");",
															"    pm.expect(jsonResponse.ver).to.eql(\"v1\");",
															"    pm.expect(jsonResponse.params.status).to.eql(\"success\");",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"OK\");",
															"    pm.expect(jsonResponse.result.response).to.eql(\"SUCCESS\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													},
													{
														"key": "X-Authenticated-User-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\"\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/course/batch/cert/v1/template/remove"
											},
											"response": [
												{
													"name": "BatchCertificateTemplateRemoveV1",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text"
															},
															{
																"key": "X-Authenticated-User-token",
																"value": "{{keycloak_access_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\"\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/course/batch/cert/v1/template/remove"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Fri, 08 Sep 2023 10:05:06 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Transfer-Encoding",
															"value": "chunked"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Vary",
															"value": "Accept-Encoding"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29997"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-response-length",
															"value": "22"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "59"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "63"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "15"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														},
														{
															"key": "Content-Encoding",
															"value": "gzip"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.template.remove\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-08 10:05:06:969+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"9c73b81e-d9c2-445e-bbad-846941c94de3\",\n        \"err\": null,\n        \"status\": \"success\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"response\": \"SUCCESS\"\n    }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Negative",
									"item": [
										{
											"name": "400 - Missing courseId",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															"",
															"pm.test(\"status should be SERVER_ERROR\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"SERVER_ERROR\");",
															"});",
															"",
															"pm.test(\"errmsg should be 'No such batchId exists'\", function () {",
															"    pm.expect(jsonResponse.params.errmsg).to.eql(\"No such batchId exists\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													},
													{
														"key": "X-Authenticated-User-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\"\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/course/batch/cert/v1/template/remove"
											},
											"response": [
												{
													"name": "400 - Missing courseId",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text"
															},
															{
																"key": "X-Authenticated-User-token",
																"value": "{{keycloak_access_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\"\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/course/batch/cert/v1/template/remove"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 05:46:26 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "336"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29997"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "7"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "10"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "10"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.template.remove\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 05:46:26:287+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"4dad4911-1eaa-414e-952c-4cf243935ec0\",\n        \"err\": \"MANDATORY_PARAMETER_MISSING\",\n        \"status\": \"MANDATORY_PARAMETER_MISSING\",\n        \"errmsg\": \"Mandatory parameter courseId is missing.\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										},
										{
											"name": "400 - Missing batchId",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															"",
															"pm.test(\"status should be MANDATORY_PARAMETER_MISSING\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"MANDATORY_PARAMETER_MISSING\");",
															"});",
															"",
															"pm.test(\"errmsg should be 'Mandatory parameter batchId is missing.'\", function () {",
															"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Mandatory parameter batchId is missing.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													},
													{
														"key": "X-Authenticated-User-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\"\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/course/batch/cert/v1/template/remove"
											},
											"response": [
												{
													"name": "400 - Missing batchId",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text"
															},
															{
																"key": "X-Authenticated-User-token",
																"value": "{{keycloak_access_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\"\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/course/batch/cert/v1/template/remove"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 05:47:58 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "335"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29995"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "5"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "12"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "71"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.template.remove\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 05:47:58:888+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"0c98d5c3-a0ff-4dbe-a473-d3a0bfd9ddd8\",\n        \"err\": \"MANDATORY_PARAMETER_MISSING\",\n        \"status\": \"MANDATORY_PARAMETER_MISSING\",\n        \"errmsg\": \"Mandatory parameter batchId is missing.\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										},
										{
											"name": "400 - Missing templateId",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															"",
															"pm.test(\"status should be MANDATORY_PARAMETER_MISSING\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"MANDATORY_PARAMETER_MISSING\");",
															"});",
															"",
															"pm.test(\"errmsg should be 'Mandatory parameter identifier is missing.'\", function () {",
															"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Mandatory parameter identifier is missing.\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													},
													{
														"key": "X-Authenticated-User-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {}\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/course/batch/cert/v1/template/remove"
											},
											"response": [
												{
													"name": "400 - Missing templateId",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text"
															},
															{
																"key": "X-Authenticated-User-token",
																"value": "{{keycloak_access_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {}\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/course/batch/cert/v1/template/remove"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 05:49:22 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "338"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29993"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "7"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "10"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "9"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.template.remove\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 05:49:22:066+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"e81fe9cf-75b5-4fe7-8327-f04e28e7f72d\",\n        \"err\": \"MANDATORY_PARAMETER_MISSING\",\n        \"status\": \"MANDATORY_PARAMETER_MISSING\",\n        \"errmsg\": \"Mandatory parameter identifier is missing.\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										},
										{
											"name": "400 - Invalid course id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															"",
															"pm.test(\"status should be SERVER_ERROR\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"SERVER_ERROR\");",
															"});",
															"",
															"pm.test(\"errmsg should be 'batchId is not linked with courseId'\", function () {",
															"    pm.expect(jsonResponse.params.errmsg).to.eql(\"batchId is not linked with courseId\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													},
													{
														"key": "X-Authenticated-User-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"AAAA\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\"\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/course/batch/cert/v1/template/remove"
											},
											"response": [
												{
													"name": "400 - Invalid course id",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text"
															},
															{
																"key": "X-Authenticated-User-token",
																"value": "{{keycloak_access_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"AAAA\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\"\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/course/batch/cert/v1/template/remove"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 05:53:57 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "291"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29991"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "13"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "16"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "13"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.template.remove\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 05:53:57:423+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"806eed1f-ebbc-486f-b054-331b0bf12886\",\n        \"err\": null,\n        \"status\": \"SERVER_ERROR\",\n        \"errmsg\": \"batchId is not linked with courseId\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										},
										{
											"name": "400 - Invalid batchId",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															"",
															"pm.test(\"status should be SERVER_ERROR\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"SERVER_ERROR\");",
															"});",
															"",
															"pm.test(\"errmsg should be 'No such batchId exists'\", function () {",
															"    pm.expect(jsonResponse.params.errmsg).to.eql(\"No such batchId exists\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													},
													{
														"key": "X-Authenticated-User-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"12@#111\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\"\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/course/batch/cert/v1/template/remove"
											},
											"response": [
												{
													"name": "400 - Invalid batchId",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text"
															},
															{
																"key": "X-Authenticated-User-token",
																"value": "{{keycloak_access_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"12@#111\",\n            \"template\": {\n                \"identifier\": \"do_113788048780771328112\"\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/course/batch/cert/v1/template/remove"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 05:55:05 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "278"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29990"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "9"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "12"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "58"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.template.remove\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 05:55:05:851+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"10864fcc-14ba-4fff-b55e-dc321559235f\",\n        \"err\": null,\n        \"status\": \"SERVER_ERROR\",\n        \"errmsg\": \"No such batchId exists\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										},
										{
											"name": "400 - Invalid templateId",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"responseCode should be CLIENT_ERROR\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															"",
															"pm.test(\"status should be SERVER_ERROR\", function () {",
															"    pm.expect(jsonResponse.params.status).to.eql(\"SERVER_ERROR\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													},
													{
														"key": "X-Authenticated-User-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"aaaa@#$\"\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/course/batch/cert/v1/template/remove"
											},
											"response": [
												{
													"name": "400 - Invalid templateId",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text"
															},
															{
																"key": "X-Authenticated-User-token",
																"value": "{{keycloak_access_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"batch\": {\n            \"courseId\": \"{{course_id}}\",\n            \"batchId\": \"{{batch_id}}\",\n            \"template\": {\n                \"identifier\": \"aaaa@#$\"\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/course/batch/cert/v1/template/remove"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Tue, 12 Sep 2023 05:56:47 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "294"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29989"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "73"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "77"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "10"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.course.batch.cert.template.remove\",\n    \"ver\": \"v1\",\n    \"ts\": \"2023-09-12 05:56:47:893+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"03ee11aa-dc4a-48f2-9466-caccaa35f5b2\",\n        \"err\": null,\n        \"status\": \"SERVER_ERROR\",\n        \"errmsg\": \"Given cert template not found: aaaa@#$\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "BatchList",
					"item": [
						{
							"name": "Positive",
							"item": [
								{
									"name": "200 - Minimum input value",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"filters\": {}\n    }\n}"
										},
										"url": "{{host}}/api/course/v1/batch/list"
									},
									"response": []
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "500 - No Filters",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 500\", function () {",
													"    pm.response.to.have.status(500);",
													"});",
													"",
													"// Validation",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"SERVER_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"SERVER_ERROR\");",
													"});",
													"pm.test(\"params.err should be \\\"INTERNAL_ERROR\\\"\", () => {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"INTERNAL_ERROR\");",
													"});",
													"pm.test(\"params.errmsg should be \\\"Process failed,please try again later.\\\"\", () => {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Process failed,please try again later.\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {}\n}"
										},
										"url": "{{host}}/api/course/v1/batch/list"
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "CourseEnroll",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "CourseEnrollV1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n      \"courseId\": \"{{course_id}}\",\n      \"batchId\": \"{{batch_id}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/api/course/v1/enroll"
							},
							"response": []
						},
						{
							"name": "CourseUnEnrollV1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n      \"courseId\": \"{{course_id}}\",\n      \"batchId\": \"{{batch_id}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/api/course/v1/unenroll"
							},
							"response": []
						},
						{
							"name": "CourseEnrollListV1",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									}
								],
								"url": "{{host}}/api/course/v1/user/enrollment/list/{{user_id}}"
							},
							"response": []
						}
					]
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "CourseEnrollV1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/api/course/v1/enroll"
							},
							"response": []
						},
						{
							"name": "CourseUnEnrollV1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/api/course/v1/unenroll"
							},
							"response": []
						},
						{
							"name": "CourseEnrollListV1",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									}
								],
								"url": "{{host}}/api/course/v1/user/enrollment/list/{{user_id}}"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "ContentAPIs",
			"item": [
				{
					"name": "ContentRead",
					"item": [
						{
							"name": "Positive",
							"item": [
								{
									"name": "200 - Minimum input value",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"filters\": {}\n    }\n}"
										},
										"url": "{{host}}/api/content/v1/search"
									},
									"response": []
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "400 - Missing filters",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is CLIENT_ERROR (400)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"// Verify responseCode",
													"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													"",
													"// Verify err",
													"pm.test(\"err should be \\\"ERR_CONTENT_SEARCH_FIELDS_MISSING\\\"\", function () {",
													"    pm.expect(jsonResponse.params.err).to.eql(\"ERR_CONTENT_SEARCH_FIELDS_MISSING\");",
													"});",
													"",
													"// Verify errmsg",
													"pm.test(\"errmsg should be \\\"Required fields for search content are missing\\\"\", function () {",
													"    pm.expect(jsonResponse.params.errmsg).to.eql(\"Required fields for search content are missing\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {}\n}"
										},
										"url": "{{host}}/api/content/v1/search"
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "ContentStateRead",
					"item": [
						{
							"name": "Positive",
							"item": [
								{
									"name": "ContentStateReadV1",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"userId\": \"{{user_id}}\",\n        \"courseId\": \"{{course_id}}\",\n        \"batchId\": \"{{batch_id}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/course/v1/content/state/read"
									},
									"response": []
								}
							]
						},
						{
							"name": "Negative",
							"item": []
						}
					]
				},
				{
					"name": "ContentStateUpdate",
					"item": [
						{
							"name": "Positive",
							"item": [
								{
									"name": "ContentStateUpdateV1",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text"
											},
											{
												"key": "X-Authenticated-User-token",
												"value": "{{keycloak_access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"request\": {\n    \"userId\": \"{{user_id}}\",\n    \"contents\": [\n      {\n        \"contentId\": \"{{content_id}}\",\n        \"batchId\": \"{{batch_id}}\",\n        \"status\": 2,\n        \"courseId\": \"{{course_id}}\",\n        \"lastAccessTime\": \"2020-11-23 12:58:35:179+0000\"\n      }\n    ]\n  }\n}"
										},
										"url": "{{host}}/api/course/v1/content/state/update"
									},
									"response": []
								}
							]
						},
						{
							"name": "Negative",
							"item": []
						}
					]
				}
			]
		},
		{
			"name": "AggregateAPIs",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "200 - Minimum input value",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"groupId\": \"{{group_id}}\",\n    \"activityId\": \"{{activity_id}}\",\n    \"activityType\": \"Course\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/api/data/v1/group/activity/agg"
							},
							"response": []
						}
					]
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "400 - Missing activity id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"",
											"// Verification",
											"pm.test(\"Status code is CLIENT_ERROR (400)\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"// Verify responseCode",
											"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", function () {",
											"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
											"});",
											"",
											"// Verify err",
											"pm.test(\"err should be \\\"ACTIVITY_ID_MISSING\\\"\", function () {",
											"    pm.expect(jsonResponse.params.err).to.eql(\"ACTIVITY_ID_MISSING\");",
											"});",
											"",
											"// Verify errmsg",
											"pm.test(\"errmsg should be \\\"ActivityId is mandatory.\\\"\", function () {",
											"    pm.expect(jsonResponse.params.errmsg).to.eql(\"ActivityId is mandatory.\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"groupId\": \"{{group_id}}\",\n        \"activityType\": \"Course\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/api/data/v1/group/activity/agg"
							},
							"response": []
						},
						{
							"name": "400 - Missing group id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"",
											"// Verification",
											"pm.test(\"Status code is CLIENT_ERROR (400)\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"// Verify responseCode",
											"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", function () {",
											"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
											"});",
											"",
											"// Verify err",
											"pm.test(\"err should be \\\"GROUP_ID_MISSING\\\"\", function () {",
											"    pm.expect(jsonResponse.params.err).to.eql(\"GROUP_ID_MISSING\");",
											"});",
											"",
											"// Verify errmsg",
											"pm.test(\"errmsg should be \\\"GroupId is mandatory.\\\"\", function () {",
											"    pm.expect(jsonResponse.params.errmsg).to.eql(\"GroupId is mandatory.\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"activityId\": \"do_113776660278427648168\",\n        \"activityType\": \"Course\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/api/data/v1/group/activity/agg"
							},
							"response": []
						},
						{
							"name": "400 - Missing activity type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"",
											"// Verification",
											"pm.test(\"Status code is CLIENT_ERROR (400)\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"// Verify responseCode",
											"pm.test(\"responseCode should be \\\"CLIENT_ERROR\\\"\", function () {",
											"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
											"});",
											"",
											"// Verify err",
											"pm.test(\"err should be \\\"ACTIVITY_TYPE_MISSING\\\"\", function () {",
											"    pm.expect(jsonResponse.params.err).to.eql(\"ACTIVITY_TYPE_MISSING\");",
											"});",
											"",
											"// Verify errmsg",
											"pm.test(\"errmsg should be \\\"ActivityType is mandatory.\\\"\", function () {",
											"    pm.expect(jsonResponse.params.errmsg).to.eql(\"ActivityType is mandatory.\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"groupId\": \"{{group_id}}\",\n        \"activityId\": \"do_113776660278427648168\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/api/data/v1/group/activity/agg"
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"    function generateRandomBatchName() {",
					"    const adjectives = ['Advanced', 'Beginner', 'Intermediate', 'Expert', 'Pro', 'Novice', 'Skilled', 'Enthusiastic'];",
					"    const subjects = ['Math', 'Science', 'History', 'Literature', 'Programming', 'Languages', 'Art', 'Music'];",
					"    const randomAdjective = adjectives[Math.floor(Math.random() * adjectives.length)];",
					"    const randomSubject = subjects[Math.floor(Math.random() * subjects.length)];",
					"    const randomNumber = Math.floor(Math.random() * 1000);",
					"    ",
					"    return `${randomAdjective} ${randomSubject} Batch ${randomNumber}`;",
					"}",
					"",
					"function generateRandomDescription() {",
					"    const phrases = [",
					"        'Join this batch to enhance your knowledge and skills.',",
					"        'In this batch, we explore various topics and concepts.',",
					"        'Looking for an engaging learning experience? Join this batch now!',",
					"        'We focus on interactive learning and collaborative discussions.',",
					"        'This batch is open to learners of all levels.'",
					"    ];",
					"    ",
					"    const randomPhrase = phrases[Math.floor(Math.random() * phrases.length)];",
					"    return randomPhrase;",
					"}",
					"",
					"const batchName = generateRandomBatchName();",
					"const batchDescription = generateRandomDescription();",
					"// Calculate the start date (current date - 5 days)",
					"const currentDate = new Date();",
					"const startDate = new Date(currentDate);",
					"startDate.setDate(currentDate.getDate());",
					"",
					"// Calculate the end date (end of 3 months from current date)",
					"const endDate = new Date(currentDate);",
					"endDate.setMonth(currentDate.getMonth() + 3, 0); // Set to the last day of the third month",
					"",
					"// Format dates as strings (YYYY-MM-DD)",
					"const formattedStartDate = startDate.toISOString().split('T')[0];",
					"const formattedEndDate = endDate.toISOString().split('T')[0];",
					"",
					"// Get the current date",
					"const currentUpdateDate = new Date();",
					"",
					"// Add 5 days to the current date",
					"const updateDate = new Date(currentUpdateDate);",
					"updateDate.setDate(currentUpdateDate.getDate() + 5);",
					"",
					"// Format the update date as a string (YYYY-MM-DD)",
					"const formattedUpdateDate = updateDate.toISOString().split('T')[0];",
					"",
					"// Set the environment variable",
					"pm.environment.set('batch_update_date', formattedUpdateDate);",
					"",
					"",
					"// Set the environment variables",
					"pm.environment.set('batch_start_date', formattedStartDate);",
					"pm.environment.set('batch_end_date', formattedEndDate);",
					"",
					"",
					"pm.environment.set('batch_name', batchName);",
					"pm.environment.set('batch_description', batchDescription);",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}